### Database Schema Overview**1. Patients*** Purpose: Stores patient demographic and contact information.* Columns:    * patient_id (Primary Key)    * first_name    * last_name    * phone_number    * email    * birthdate    * created_at**2. Doctors*** Purpose: Stores information about medical practitioners.* Columns:    * doctor_id (Primary Key)    * first_name    * last_name    * specialty_id (Foreign Key to Specialties)    * license_number (Unique)    * phone_number    * email**3. Appointments*** Purpose: Manages scheduled visits between patients and doctors.* Columns:    * appointment_id (Primary Key)    * patient_id (Foreign Key to Patients)    * doctor_id (Foreign Key to Doctors)    * appointment_date    * appointment_time    * status (e.g., 'Scheduled', 'Completed', 'Cancelled')**4. Invoices*** Purpose: Stores billing and payment details for appointments.* Columns:    * invoice_id (Primary Key)    * appointment_id (Foreign Key to Appointments, Unique)    * amount    * status (e.g., 'Pending', 'Paid', 'Cancelled')    * issue_date**5. Prescriptions*** Purpose: Records medications issued to patients during appointments.* Columns:    * prescription_id (Primary Key)    * appointment_id (Foreign Key to Appointments)    * medication_id (Foreign Key to Medications)    * quantity    * instructions**6. Medications*** Purpose: Stores details about available drugs and medical supplies.* Columns:    * medication_id (Primary Key)    * name (Unique)    * price**7. Specialties*** Purpose: Defines and categorizes various medical specialties.* Columns:    * specialty_id (Primary Key)    * name (Unique)---### Relations SectionThis section outlines the primary key (PK) and foreign key (FK) relationships that connect your tables, ensuring data integrity and enabling complex queries.* Doctors to Specialties (One-to-Many)    * Doctors.specialty_id (FK) references Specialties.specialty_id (PK).    * Explanation: Each doctor belongs to one specialty, but one specialty can have many doctors.* Appointments to Patients (Many-to-One)    * Appointments.patient_id (FK) references Patients.patient_id (PK).    * Explanation: An appointment is scheduled for one patient, but a patient can have many appointments.* Appointments to Doctors (Many-to-One)    * Appointments.doctor_id (FK) references Doctors.doctor_id (PK).    * Explanation: An appointment is conducted by one doctor, but a doctor can have many appointments.* Invoices to Appointments (One-to-One)    * Invoices.appointment_id (FK) references Appointments.appointment_id (PK). This foreign key is also UNIQUE in the Invoices table.    * Explanation: Each invoice is tied to a single, specific appointment, and an appointment generates at most one invoice.* Prescriptions to Appointments (Many-to-One)    * Prescriptions.appointment_id (FK) references Appointments.appointment_id (PK).    * Explanation: A prescription is issued during a specific appointment, and an appointment can result in multiple prescriptions (e.g., for different medications).* Prescriptions to Medications (Many-to-One)    * Prescriptions.medication_id (FK) references Medications.medication_id (PK).    * Explanation: A prescription item refers to one medication, but a medication can be included in many prescriptions.